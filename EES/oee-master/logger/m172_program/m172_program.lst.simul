***********************************************************************
*
*	CODE GENERATION LISTING FOR: m172_program
*	COMPILER VERSION: 2.2.0
*
***********************************************************************

***********************************************************************
UNUSED FUNCTIONS:

	BITTOWORD
	BITTOBYTE
	BYTETOWORD
	F_MATRIXREADBYTE
***********************************************************************

***********************************************************************
UNUSED FUNCTION BLOCKS:

	PULSE
	FF_D
	BYTETOBIT
	WORDTOBIT
	WORDTOBYTE
	CTD
	CTD_DINT
	CTD_UDINT
	CTU
	CTU_DINT
	CTU_UDINT
	CTUD
	CTUD_DINT
	CTUD_UDINT
	TOF
	TON
	TP
	SR
	RS
	R_TRIG
	F_TRIG
	YEARLYEVENT
	WEEKSCHEDULE
	THREEPOINTACTUATOR
	STEPCONTROLLERANALOG
	PIDAUTOTUNING
	PIDADVANCED
	OPERATINGHOURS
	DAYLIGHTSAVING
	FB_SETMASKINGPATTERN
	FB_SETFORMATINFOPATTERN
	FB_SETFINDERPATTERN
	FB_SETBITSTREAM
	FB_SETALIGNMENTPATTERN
	FB_MATRIXWRITEBYTE
	FB_GETRSCODEWORD
	QRCODEGENERATOR
	ECFANMGMT
	PSYCHROMETRIC
	AHUTEMPCNTRLSTRATEGY
	AHUPLANTMODESTRATEGY
	REDUNDANTPUMPCNTRL
	COPCALCULATION
	THERMALPOWERCALCULATION
	PULSE2COUNTER
	COUNTER2ENERGY
	FLOATINGHIGHPRESCNTRL
	COMPMGMTVS
	THERMALPOWER_ENTHALPY
	DOUBLEINTERPO_5X8
	FLUID_DENSITY
	FLUID_ENTHALPY
	TEMP2PRESS
	PRESS2TEMP
	FANMGMT
	COMPMGMT
	COMPCNTRL_SLIDER
	COMPCNTRL_VS
	COMPCNTRL_ONOFF
	COMPAPPLIMIT
	COMPALARMMGMT
	ATV71MODBUSCOM
	ATV61MODBUSCOM
	ATV32MODBUSCOM
	ATV31MODBUSCOM
	ATV312MODBUSCOM
	ATV21MODBUSCOM
	ATV212MODBUSCOM
	ATV12MODBUSCOM
	AUXPUMPCTRL
	CAVTPROT
	COMPSP
	COMPSPFLOW
	DEVSWCPUMPCTRL
	FSPUMPCTRL
	OPINTAUXPUMP
	OPINTPUMP
	OPPRTY
	PID_PARA_CHECK
	PIPEFILL
	PUMPAVAI
	PUMPFBCKMAPP
	PUMPPID
	PUMPPIDSTAG
	VSDAVAI
	VSDCTRL
	VSDNU
	VSPUMPCTRL
***********************************************************************

**************************************************
	List program: INITPARDB
**************************************************

PROGRAM INITPARDB

        VAR
WARNINGSKILLER : USINT;
DUMMYCRC32 : UDINT;
	END_VAR

END_PROGRAM

0341F020  55                            push ebp
0341F021  8B EC                         mov ebp, esp
0341F023  60                            pushad

#0		{SRC:INITPARDB}
#1
#2
#3
#4		{L:3}
(*) UDINT
0341F024  B8 2D 42 8C 5F                mov eax, 1603027501
0341F029  89 05 CC CC CC CC             mov [CCCCCCCCH], eax ; $$DATA$$+12

#5
#6
#7		{L:5}
(*) UDINT
0341F02F  B8 CC CC CC CC                mov eax, CCCCCCCCH ; $$CODE$$+4830

#8		{L:5}
(*) @UDINT
0341F034  89 05 CC CC CC CC             mov [CCCCCCCCH], eax ; $$DATA$$+72

#9		{L:5}
(*) UNDEF
0341F03A  8B 05 CC CC CC CC             mov eax, [CCCCCCCCH] ; $$DATA$$+72

#10		{L:5}
(-) @UDINT
0341F040  68 1D 00 00 00                push 29
0341F045  50                            push eax
0341F046  B9 CC CC CC CC                mov ecx, CCCCCCCCH ; SYSDBASE_SETEXTTABLE
0341F04B  FF D1                         call ecx
0341F04D  81 C4 08 00 00 00             add esp, 8

#11		{L:5}
(*) USINT
0341F053  88 05 CC CC CC CC             mov [CCCCCCCCH], al ; $$DATA$$+20

0341F059  61                            popad
0341F05A  5D                            pop ebp

0341F05B  C3                            ret

END_PROGRAM


**************************************************
	Target variable image generation
**************************************************


*** INPUT:
0341F05C  C3                            ret


*** OUTPUT:
0341F05D  C3                            ret



**************************************************
	Task SERV init code
**************************************************

0341F05E  55                            push ebp
0341F05F  8B EC                         mov ebp, esp

0341F061  8B E5                         mov esp, ebp
0341F063  5D                            pop ebp

0341F064  C3                            ret

**************************************************
	List program: TRANSFER_VARS
**************************************************

PROGRAM TRANSFER_VARS

END_PROGRAM

0341F070  55                            push ebp
0341F071  8B EC                         mov ebp, esp
0341F073  60                            pushad

#0		{SRC:TRANSFER_VARS}
#1
#2
#3
#4		{L:2}
(*) UDINT
0341F074  0F BF 05 CC CC CC CC          movsx eax, word ptr [CCCCCCCCH] ; $$DATA$$+22
0341F07B  66 89 05 CC CC CC CC          mov [CCCCCCCCH], ax ; %M110+0

#5
#6
#7		{L:3}
(*) INT
0341F082  0F BF 05 CC CC CC CC          movsx eax, word ptr [CCCCCCCCH] ; $$DATA$$+24
0341F089  66 89 05 CC CC CC CC          mov [CCCCCCCCH], ax ; %M110+2

#8
#9
#10		{L:4}
(*) INT
0341F090  0F BF 05 CC CC CC CC          movsx eax, word ptr [CCCCCCCCH] ; $$DATA$$+26
0341F097  66 89 05 CC CC CC CC          mov [CCCCCCCCH], ax ; %M110+4

#11
#12
#13		{L:5}
(*) INT
0341F09E  0F BF 05 CC CC CC CC          movsx eax, word ptr [CCCCCCCCH] ; $$DATA$$+28
0341F0A5  66 89 05 CC CC CC CC          mov [CCCCCCCCH], ax ; %M110+6

#14
#15
#16		{L:6}
(*) INT
0341F0AC  0F BF 05 CC CC CC CC          movsx eax, word ptr [CCCCCCCCH] ; $$DATA$$+30
0341F0B3  66 89 05 CC CC CC CC          mov [CCCCCCCCH], ax ; %M110+8

#17
#18
#19		{L:7}
(*) INT
0341F0BA  0F BF 05 CC CC CC CC          movsx eax, word ptr [CCCCCCCCH] ; $$DATA$$+32
0341F0C1  66 89 05 CC CC CC CC          mov [CCCCCCCCH], ax ; %M110+10

#20
#21
#22		{L:8}
(*) INT
0341F0C8  0F BF 05 CC CC CC CC          movsx eax, word ptr [CCCCCCCCH] ; $$DATA$$+34
0341F0CF  66 89 05 CC CC CC CC          mov [CCCCCCCCH], ax ; %M110+12

#23
#24
#25		{L:9}
(*) INT
0341F0D6  0F BF 05 CC CC CC CC          movsx eax, word ptr [CCCCCCCCH] ; $$DATA$$+36
0341F0DD  66 89 05 CC CC CC CC          mov [CCCCCCCCH], ax ; %M110+14

#26
#27
#28		{L:10}
(*) INT
0341F0E4  0F BF 05 CC CC CC CC          movsx eax, word ptr [CCCCCCCCH] ; $$DATA$$+38
0341F0EB  66 89 05 CC CC CC CC          mov [CCCCCCCCH], ax ; %M110+16

#29
#30
#31		{L:11}
(*) INT
0341F0F2  0F BF 05 CC CC CC CC          movsx eax, word ptr [CCCCCCCCH] ; $$DATA$$+40
0341F0F9  66 89 05 CC CC CC CC          mov [CCCCCCCCH], ax ; %M110+18

#32
#33
#34		{L:12}
(*) INT
0341F100  0F BF 05 CC CC CC CC          movsx eax, word ptr [CCCCCCCCH] ; $$DATA$$+42
0341F107  66 89 05 CC CC CC CC          mov [CCCCCCCCH], ax ; %M110+20

#35
#36
#37		{L:13}
(*) INT
0341F10E  0F BF 05 CC CC CC CC          movsx eax, word ptr [CCCCCCCCH] ; $$DATA$$+44
0341F115  66 89 05 CC CC CC CC          mov [CCCCCCCCH], ax ; %M110+22

#38
#39
#40		{L:16}
(*) INT
0341F11C  33 C0                         xor eax, eax
0341F11E  8A 05 CC CC CC CC             mov al, [CCCCCCCCH] ; $$DATA$$+21
0341F124  66 89 05 CC CC CC CC          mov [CCCCCCCCH], ax ; %M110+24

#41
#42
#43		{L:17}
(*) BOOL
0341F12B  33 C0                         xor eax, eax
0341F12D  8A 05 CC CC CC CC             mov al, [CCCCCCCCH] ; $$DATA$$+46
0341F133  66 89 05 CC CC CC CC          mov [CCCCCCCCH], ax ; %M110+26

#44
#45
#46		{L:18}
(*) BOOL
0341F13A  33 C0                         xor eax, eax
0341F13C  8A 05 CC CC CC CC             mov al, [CCCCCCCCH] ; $$DATA$$+47
0341F142  66 89 05 CC CC CC CC          mov [CCCCCCCCH], ax ; %M110+28

#47
#48
#49		{L:19}
(*) BOOL
0341F149  33 C0                         xor eax, eax
0341F14B  8A 05 CC CC CC CC             mov al, [CCCCCCCCH] ; $$DATA$$+48
0341F151  66 89 05 CC CC CC CC          mov [CCCCCCCCH], ax ; %M110+30

#50
#51
#52		{L:20}
(*) BOOL
0341F158  33 C0                         xor eax, eax
0341F15A  8A 05 CC CC CC CC             mov al, [CCCCCCCCH] ; $$DATA$$+49
0341F160  66 89 05 CC CC CC CC          mov [CCCCCCCCH], ax ; %M110+32

#53
#54
#55		{L:21}
(*) BOOL
0341F167  33 C0                         xor eax, eax
0341F169  8A 05 CC CC CC CC             mov al, [CCCCCCCCH] ; $$DATA$$+50
0341F16F  66 89 05 CC CC CC CC          mov [CCCCCCCCH], ax ; %M110+34

#56
#57
#58		{L:22}
(*) BOOL
0341F176  33 C0                         xor eax, eax
0341F178  8A 05 CC CC CC CC             mov al, [CCCCCCCCH] ; $$DATA$$+51
0341F17E  66 89 05 CC CC CC CC          mov [CCCCCCCCH], ax ; %M110+36

#59
#60
#61		{L:23}
(*) BOOL
0341F185  33 C0                         xor eax, eax
0341F187  8A 05 CC CC CC CC             mov al, [CCCCCCCCH] ; $$DATA$$+52
0341F18D  66 89 05 CC CC CC CC          mov [CCCCCCCCH], ax ; %M110+38

#62
#63
#64		{L:24}
(*) BOOL
0341F194  33 C0                         xor eax, eax
0341F196  8A 05 CC CC CC CC             mov al, [CCCCCCCCH] ; $$DATA$$+53
0341F19C  66 89 05 CC CC CC CC          mov [CCCCCCCCH], ax ; %M110+40

#65
#66
#67		{L:25}
(*) BOOL
0341F1A3  33 C0                         xor eax, eax
0341F1A5  8A 05 CC CC CC CC             mov al, [CCCCCCCCH] ; $$DATA$$+54
0341F1AB  66 89 05 CC CC CC CC          mov [CCCCCCCCH], ax ; %M110+42

#68
#69
#70		{L:26}
(*) BOOL
0341F1B2  33 C0                         xor eax, eax
0341F1B4  8A 05 CC CC CC CC             mov al, [CCCCCCCCH] ; $$DATA$$+55
0341F1BA  66 89 05 CC CC CC CC          mov [CCCCCCCCH], ax ; %M110+44

#71
#72
#73		{L:27}
(*) BOOL
0341F1C1  33 C0                         xor eax, eax
0341F1C3  8A 05 CC CC CC CC             mov al, [CCCCCCCCH] ; $$DATA$$+56
0341F1C9  66 89 05 CC CC CC CC          mov [CCCCCCCCH], ax ; %M110+46

#74
#75
#76		{L:30}
(*) BOOL
0341F1D0  B8 00 00 00 00                mov eax, 0
0341F1D5  66 89 05 CC CC CC CC          mov [CCCCCCCCH], ax ; %M110+48

#77
#78
#79		{L:31}
(*) INT
0341F1DC  B8 00 00 00 00                mov eax, 0
0341F1E1  66 89 05 CC CC CC CC          mov [CCCCCCCCH], ax ; %M110+50

#80
#81
#82		{L:32}
(*) INT
0341F1E8  B8 00 00 00 00                mov eax, 0
0341F1ED  66 89 05 CC CC CC CC          mov [CCCCCCCCH], ax ; %M110+52

#83
#84
#85		{L:33}
(*) INT
0341F1F4  B8 00 00 00 00                mov eax, 0
0341F1F9  66 89 05 CC CC CC CC          mov [CCCCCCCCH], ax ; %M110+54

#86
#87
#88		{L:34}
(*) INT
0341F200  B8 00 00 00 00                mov eax, 0
0341F205  66 89 05 CC CC CC CC          mov [CCCCCCCCH], ax ; %M110+56

0341F20C  61                            popad
0341F20D  5D                            pop ebp

0341F20E  C3                            ret

END_PROGRAM


**************************************************
	Target variable image generation
**************************************************


*** INPUT:
0341F20F  66 8B 0D CC CC CC CC          mov cx, [CCCCCCCCH] ; %I1+0
0341F216  66 89 0D CC CC CC CC          mov [CCCCCCCCH], cx ; $$DATA$$+22

0341F21D  66 8B 0D CC CC CC CC          mov cx, [CCCCCCCCH] ; %I1+2
0341F224  66 89 0D CC CC CC CC          mov [CCCCCCCCH], cx ; $$DATA$$+24

0341F22B  66 8B 0D CC CC CC CC          mov cx, [CCCCCCCCH] ; %I1+4
0341F232  66 89 0D CC CC CC CC          mov [CCCCCCCCH], cx ; $$DATA$$+26

0341F239  66 8B 0D CC CC CC CC          mov cx, [CCCCCCCCH] ; %I1+6
0341F240  66 89 0D CC CC CC CC          mov [CCCCCCCCH], cx ; $$DATA$$+28

0341F247  66 8B 0D CC CC CC CC          mov cx, [CCCCCCCCH] ; %I1+8
0341F24E  66 89 0D CC CC CC CC          mov [CCCCCCCCH], cx ; $$DATA$$+30

0341F255  66 8B 0D CC CC CC CC          mov cx, [CCCCCCCCH] ; %I1+10
0341F25C  66 89 0D CC CC CC CC          mov [CCCCCCCCH], cx ; $$DATA$$+32

0341F263  66 8B 0D CC CC CC CC          mov cx, [CCCCCCCCH] ; %I1+12
0341F26A  66 89 0D CC CC CC CC          mov [CCCCCCCCH], cx ; $$DATA$$+34

0341F271  66 8B 0D CC CC CC CC          mov cx, [CCCCCCCCH] ; %I1+14
0341F278  66 89 0D CC CC CC CC          mov [CCCCCCCCH], cx ; $$DATA$$+36

0341F27F  66 8B 0D CC CC CC CC          mov cx, [CCCCCCCCH] ; %I1+16
0341F286  66 89 0D CC CC CC CC          mov [CCCCCCCCH], cx ; $$DATA$$+38

0341F28D  66 8B 0D CC CC CC CC          mov cx, [CCCCCCCCH] ; %I1+18
0341F294  66 89 0D CC CC CC CC          mov [CCCCCCCCH], cx ; $$DATA$$+40

0341F29B  66 8B 0D CC CC CC CC          mov cx, [CCCCCCCCH] ; %I1+20
0341F2A2  66 89 0D CC CC CC CC          mov [CCCCCCCCH], cx ; $$DATA$$+42

0341F2A9  66 8B 0D CC CC CC CC          mov cx, [CCCCCCCCH] ; %I1+22
0341F2B0  66 89 0D CC CC CC CC          mov [CCCCCCCCH], cx ; $$DATA$$+44

0341F2B7  8A 0D CC CC CC CC             mov cl, [CCCCCCCCH] ; %I0+0
0341F2BD  88 0D CC CC CC CC             mov [CCCCCCCCH], cl ; $$DATA$$+21

0341F2C3  8A 0D CC CC CC CC             mov cl, [CCCCCCCCH] ; %I0+1
0341F2C9  88 0D CC CC CC CC             mov [CCCCCCCCH], cl ; $$DATA$$+46

0341F2CF  8A 0D CC CC CC CC             mov cl, [CCCCCCCCH] ; %I0+2
0341F2D5  88 0D CC CC CC CC             mov [CCCCCCCCH], cl ; $$DATA$$+47

0341F2DB  8A 0D CC CC CC CC             mov cl, [CCCCCCCCH] ; %I0+3
0341F2E1  88 0D CC CC CC CC             mov [CCCCCCCCH], cl ; $$DATA$$+48

0341F2E7  8A 0D CC CC CC CC             mov cl, [CCCCCCCCH] ; %I0+4
0341F2ED  88 0D CC CC CC CC             mov [CCCCCCCCH], cl ; $$DATA$$+49

0341F2F3  8A 0D CC CC CC CC             mov cl, [CCCCCCCCH] ; %I0+5
0341F2F9  88 0D CC CC CC CC             mov [CCCCCCCCH], cl ; $$DATA$$+50

0341F2FF  8A 0D CC CC CC CC             mov cl, [CCCCCCCCH] ; %I0+6
0341F305  88 0D CC CC CC CC             mov [CCCCCCCCH], cl ; $$DATA$$+51

0341F30B  8A 0D CC CC CC CC             mov cl, [CCCCCCCCH] ; %I0+7
0341F311  88 0D CC CC CC CC             mov [CCCCCCCCH], cl ; $$DATA$$+52

0341F317  8A 0D CC CC CC CC             mov cl, [CCCCCCCCH] ; %I0+8
0341F31D  88 0D CC CC CC CC             mov [CCCCCCCCH], cl ; $$DATA$$+53

0341F323  8A 0D CC CC CC CC             mov cl, [CCCCCCCCH] ; %I0+9
0341F329  88 0D CC CC CC CC             mov [CCCCCCCCH], cl ; $$DATA$$+54

0341F32F  8A 0D CC CC CC CC             mov cl, [CCCCCCCCH] ; %I0+10
0341F335  88 0D CC CC CC CC             mov [CCCCCCCCH], cl ; $$DATA$$+55

0341F33B  8A 0D CC CC CC CC             mov cl, [CCCCCCCCH] ; %I0+11
0341F341  88 0D CC CC CC CC             mov [CCCCCCCCH], cl ; $$DATA$$+56

0341F347  C3                            ret


*** OUTPUT:
0341F348  C3                            ret



**************************************************
	Task BACKGROUND init code
**************************************************

0341F349  55                            push ebp
0341F34A  8B EC                         mov ebp, esp

0341F34C  8B E5                         mov esp, ebp
0341F34E  5D                            pop ebp

0341F34F  C3                            ret


**************************************************
VIRTUAL TABLES:

--------------------------------------------------------
VIRTUAL TABLES INDEXES
--------------------------------------------------------


**************************************************
	Global init code
**************************************************

0341F360  55                            push ebp
0341F361  8B EC                         mov ebp, esp

0341F363  8B E5                         mov esp, ebp
0341F365  5D                            pop ebp

0341F366  C3                            ret



**************************************************
	Global RETAIN init code
**************************************************

0341F367  55                            push ebp
0341F368  8B EC                         mov ebp, esp

0341F36A  8B E5                         mov esp, ebp
0341F36C  5D                            pop ebp

0341F36D  C3                            ret



**************************************************
	Task $$VirtualTables init code
**************************************************

0341F36E  55                            push ebp
0341F36F  8B EC                         mov ebp, esp

0341F371  8B E5                         mov esp, ebp
0341F373  5D                            pop ebp

0341F374  C3                            ret



********************************************
MEMORY MAP
********************************************

Code area type:			main code
Start code area:		 341D020h
End code area:			 341F380h
Code size:			    2360h

Start local data area:		 3382020h
End local data area:		 338206Ch
Local data size:		      4Ch

Start retentive data area:	       0h
End retentive data area:	       0h
Retentive data size:		       0h

Start bit data area:		       0h
End bit data area:		       0h
Bit data size:			       0h



********************************************
CODE ID:                                E5BD808B
DEBUG MEMO ID:                          0000B332
FULL MEMO ID:                           0000760C
RELOCATION ADDR:                        0341D020
********************************************
