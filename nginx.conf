events {
}

#HTTP - proxy all requests to node app
http{
  #HTTP - redirects all trafic to HTTPS
  server {
      listen 80;
      listen [::]:80 default_server ipv6only=on;
      return 301 https://$host$request_uri;
  }

  server{
      #Enable HTTP/2
      listen 443 ssl http2;
      listen [::]:443 ssl http2;
      server_name api.voicir.com;

      #Use the Lets Encrypt certs
      ssl_certificate /etc/letsencrypt/live/api.voicir.com/fullchain.pem;
      ssl_certificate_key /etc/letsencrypt/live/api.voicir.com/privkey.pem;

      #include the SSL config from cipherli.st
      include ssl-params.conf;
      
      location / {
        # the following is required for WebSockets
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_set_header X-NginX-Proxy true;
  
        # supposedly prevents 502 bad gateway error;
        # ultimately not necessary in my case
        proxy_buffers 8 32k;
        proxy_buffer_size 64k;
         
        # the following is required
        proxy_pass http://socket-service/;
        proxy_redirect off;
  
        # the following is required as well for WebSockets
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
      }
      location /v1/ {
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-NginX-Proxy true;
          proxy_pass http://eze-handler/;
          proxy_ssl_session_reuse off;
          proxy_set_header Host $http_host;
          proxy_cache_bypass $http_upgrade;
          proxy_redirect off;
      }
      location /log/ {
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-NginX-Proxy true;
          proxy_pass http://log-handler/;
          proxy_ssl_session_reuse off;
          proxy_set_header Host $http_host;
          proxy_cache_bypass $http_upgrade;
          proxy_redirect off;
      }
  }
}
