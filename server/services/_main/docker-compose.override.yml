version: '3.1'

services:
  main:
    build:
      context: ../nginx
    ports:
      - "8080:80"
    volumes:
      - ../nginx/nginx.dev.conf:/etc/nginx/nginx.conf
      - ./dev-keys/ssl:/etc/ssl
  health:
    build:
      context: ../health
      args:
        - NODE_ENV=development
    command: ../node_modules/.bin/nodemon --inspect=0.0.0.0:9229 -L
    volumes:
      - ../health:/opt/app
      - health-node_modules:/opt/app/node_modules
    environment:
      - NODE_ENV=development
    depends_on:
      - postgres
    restart: always
  point-logs:
    build:
      context: ../point-logs
      args:
        - NODE_ENV=development
    command: ../node_modules/.bin/nodemon --inspect=0.0.0.0:9229 -L
    volumes:
      - ../point-logs:/opt/app
      - point-logs-node_modules:/opt/app/node_modules
    environment:
      - NODE_ENV=development
    depends_on:
      - postgres
  graphs:
    build:
      context: ../graphs
      args:
        - NODE_ENV=development
    command: ../node_modules/.bin/nodemon --inspect=0.0.0.0:9229 -L
    volumes:
      - ../graphs:/opt/app
      - graphs-node_modules:/opt/app/node_modules
    environment:
      - NODE_ENV=development
    depends_on:
      - postgres
  accounts:
    build:
      context: ../accounts
      args:
        - NODE_ENV=development
    command: ../node_modules/.bin/nodemon --inspect=0.0.0.0:9229 -L
    volumes:
      - ../accounts:/opt/app
    environment:
      - NODE_ENV=development
    depends_on:
      - postgres
    restart: always
  live-data:
    build:
      context: ../live-data
      args:
        - NODE_ENV=development
    command: ../node_modules/.bin/nodemon --inspect=0.0.0.0:9229 -L
    volumes:
      - ../live-data:/opt/app
      - socket-data-node_modules:/opt/app/node_modules
  alerts:
    build:
      context: ../alerts
      args:
        - NODE_ENV=development
    command: ../node_modules/.bin/nodemon --inspect=0.0.0.0:9229 -L
    volumes:
      - ../alerts:/opt/app
      - alerts-node_modules:/opt/app/node_modules
  postgres:
    image: postgres
    restart: always
    ports:
      - "32768:5432"
    environment:
      POSTGRES_PASSWORD: password
volumes:
  socket-data-node_modules:
  alerts-node_modules:
  point-logs-node_modules:
  health-node_modules:
  graphs-node_modules:
secrets:
  pg-user:
    file: dev-keys/pg-user.txt
  pg-pass:
    file: dev-keys/pg-pass.txt
  pg-host:
    file: dev-keys/pg-host.txt
  pg-db:
    file: dev-keys/pg-db.txt
  jwt-secret:
    file: dev-keys/jwt-secret.txt
  twilio-sid:
    file: ../../../../../../Desktop/twilio/sid.txt
  twilio-auth-token:
    file: ../../../../../../Desktop/twilio/auth_token.txt
  twilio-phone-num:
    file: ../../../../../../Desktop/twilio/phone_num.txt
  ssl_dhparam:
    file: dev-keys/ssl/dhparam.pem