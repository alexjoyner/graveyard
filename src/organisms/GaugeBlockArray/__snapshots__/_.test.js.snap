// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`BaseGaugeBlockArray component Component with points Should match snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <BaseGaugeBlockArray
    points={
        Object {
            "1": Object {
              "name": "Test Input",
              "value": 10,
            },
          }
    }
    publishNewLog={[Function]}
    publishNewPoints={[Function]}
    removeAllPoints={[Function]}
    socket={
        PointsSocket {
            "points": Array [
              "1",
              "2",
            ],
            "socket": Object {
              "emit": [Function],
              "on": [Function],
            },
          }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <Connect(Component)
          id="1"
          point={
                    Object {
                              "name": "Test Input",
                              "value": 10,
                            }
          }
          points={
                    Object {
                              "1": Object {
                                "name": "Test Input",
                                "value": 10,
                              },
                            }
          }
          publishNewLog={[Function]}
          publishNewPoints={[Function]}
          removeAllPoints={[Function]}
          socket={
                    PointsSocket {
                              "points": Array [
                                "1",
                                "2",
                              ],
                              "socket": Object {
                                "emit": [Function],
                                "on": [Function],
                              },
                            }
          }
/>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": "1",
        "nodeType": "class",
        "props": Object {
          "id": "1",
          "point": Object {
            "name": "Test Input",
            "value": 10,
          },
          "points": Object {
            "1": Object {
              "name": "Test Input",
              "value": 10,
            },
          },
          "publishNewLog": [Function],
          "publishNewPoints": [Function],
          "removeAllPoints": [Function],
          "socket": PointsSocket {
            "points": Array [
              "1",
              "2",
            ],
            "socket": Object {
              "emit": [Function],
              "on": [Function],
            },
          },
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <Connect(Component)
            id="1"
            point={
                        Object {
                                    "name": "Test Input",
                                    "value": 10,
                                  }
            }
            points={
                        Object {
                                    "1": Object {
                                      "name": "Test Input",
                                      "value": 10,
                                    },
                                  }
            }
            publishNewLog={[Function]}
            publishNewPoints={[Function]}
            removeAllPoints={[Function]}
            socket={
                        PointsSocket {
                                    "points": Array [
                                      "1",
                                      "2",
                                    ],
                                    "socket": Object {
                                      "emit": [Function],
                                      "on": [Function],
                                    },
                                  }
            }
/>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": "1",
          "nodeType": "class",
          "props": Object {
            "id": "1",
            "point": Object {
              "name": "Test Input",
              "value": 10,
            },
            "points": Object {
              "1": Object {
                "name": "Test Input",
                "value": 10,
              },
            },
            "publishNewLog": [Function],
            "publishNewPoints": [Function],
            "removeAllPoints": [Function],
            "socket": PointsSocket {
              "points": Array [
                "1",
                "2",
              ],
              "socket": Object {
                "emit": [Function],
                "on": [Function],
              },
            },
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;

exports[`BaseGaugeBlockArray component Component without data Should match snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <BaseGaugeBlockArray
    points={Object {}}
    publishNewLog={[Function]}
    publishNewPoints={[Function]}
    removeAllPoints={[Function]}
    socket={
        PointsSocket {
            "points": Array [
              "1",
              "2",
            ],
            "socket": Object {
              "emit": [Function],
              "on": [Function],
            },
          }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {},
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {},
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
